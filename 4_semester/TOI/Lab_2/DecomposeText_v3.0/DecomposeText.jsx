/* DecomposeText.jsx version: 3.0 author: Charles Bordenave (www.nabscripts.com) date: 08 Aug 2013*/function DecomposeText(){	var decomposeText = this;		var utils = new DecomposeTextUtils();	// infos	this.scriptName = "DecomposeText.jsx";		this.scriptVersion = "3.0";	this.scriptTitle = "Decompose Text";	this.scriptCopyright = "Copyright (c) 2013 Charles Bordenave";	this.scriptHomepage = "http://www.nabscripts.com";	this.scriptDescription = {en:"This script decomposes the content of the selected text layer and places each element on its own layer.\\r\\rThe first option allows you to keep each element in its original position, but new layers have the same text as the original layer except that some characters/words/lines are hidden by expressions. The second option creates new layers with only one character/word/line per layer, but the positioning is only approximated since it is currently not possible to retrieve the exact location of each element with AE scripting.", 							  fr:"Ce script décompose le contenu du calque texte sélectionné et place chaque élément sur un calque indépendant.\\r\\rLa première option vous permet de maintenir chaque élément à sa position originale, mais les nouveaux calques ont le même texte que le calque original sauf que certains caractères/mots/lignes sont cachés par expressions. La deuxième option crée les nouveaux calques avec seulement un caractère/mot/ligne par calque, mais le positionnement n\\\'est qu\\\'approximatif car il est actuellement impossible de récupérer la position exacte de chaque élément avec le scripting d\\\'AE."};	this.scriptAbout = {en:this.scriptName + ", v" + this.scriptVersion + "\\r" + this.scriptCopyright + "\\r" + this.scriptHomepage + "\\r\\r" + utils.loc(this.scriptDescription), 						fr:this.scriptName + ", v" + this.scriptVersion + "\\r" + this.scriptCopyright + "\\r" + this.scriptHomepage + "\\r\\r" + utils.loc(this.scriptDescription)};			this.scriptUsage = {en:	"\u25BA Select a text layer \\r" +  							"\u25BA Specify how the text must be splitted \\r" +							"\u25BA Click on Decompose",						fr:	"\u25BA Sélectionnez un calque texte \\r" +							"\u25BA Spécifiez comment le texte doit être décomposé \\r" +							"\u25BA Cliquez sur Décomposer"};							// errors	this.noCompErr = {en:"A comp must be active.", fr:"Une composition doit être active."};	this.noLayerErr = {en:"Please select a text layer.", fr:"Veuillez sélectionner un calque texte."};	this.badSelLayerErr = this.noLayerErr;	this.paragraphTextErr = {en:"Paragraph text is not supported.", fr:"Le texte paragraphe n'est pas supporté."};	// UI strings and default settings	this.aboutBtnName = "?";	this.methodStName = {en:"Decompose into:", fr:"Décompose en:"};	this.methodLstChoices = {en:'["Characters", "Words", "Lines"]', fr:'["Caractères", "Mots", "Lignes"]'};	this.methodLstSelDflt = 0;	this.withExprRbName = {en:"Original position using expressions", fr:"Position originale avec expressions"};	this.withoutExprRbName = {en:"Approx. position without expressions", fr:"Position approx. sans expressions"};	this.useExprDfltVal = true;	this.runBtnName = {en:"Decompose", fr:"Décomposer"};		// internals	this.basedOnMode = { charactersExcludingSpaces:2, words:3, lines:4 };	this.splitInto = this.methodLstSelDflt;	this.useExprB = this.useExprDfltVal;		this.buildUI = function (thisObj)	{		// dockable panel or palette		var pal = (thisObj instanceof Panel) ? thisObj : new Window("palette", this.scriptTitle, undefined, {resizeable:false});		// resource specifications		var res =		"group { orientation:'column', alignment:['left','top'], alignChildren:['right','top'], \			gr1: Group { \				aboutBtn: Button { text:'" + this.aboutBtnName + "', preferredSize:[25,20] } \			}, \			gr2: Group { \				methodSt: StaticText { text:'" + utils.loc(this.methodStName) + "' }, \				methodLst: DropDownList { properties:{items:" + utils.loc(this.methodLstChoices) + "}, preferredSize:[110,-1] } \			}, \			gr3: Group { orientation:'column', alignChildren:['left','top'], \				withExpr: RadioButton { text:'" + utils.loc(this.withExprRbName) + "', value:'" + this.useExprDfltVal + "' }, \				withoutExpr: RadioButton { text:'" + utils.loc(this.withoutExprRbName) + "' } \			}, \			gr4: Group { orientation:'row', alignment:['fill','top'], \				runBtn: Button { text:'" + utils.loc(this.runBtnName) + "', alignment:['right','center'] } \			} \		}"; 		pal.gr = pal.add(res);				pal.gr.gr2.methodLst.selection = this.methodLstSelDflt;				// event callbacks		pal.gr.gr1.aboutBtn.onClick = function () 		{ 			utils.createAboutDlg(decomposeText.scriptAbout, decomposeText.scriptUsage); 		};		pal.gr.gr2.methodLst.onChange = function () 		{ 			decomposeText.splitInto = this.selection.index;		};				pal.gr.gr3.withExpr.onClick = function () 		{ 			decomposeText.useExprB = this.value; 		};				pal.gr.gr3.withoutExpr.onClick = function () 		{ 			decomposeText.useExprB = !this.value; 		};				pal.gr.gr4.runBtn.onClick = function () 		{ 			decomposeText.decompose(); 		};						// show user interface		if (pal instanceof Window)		{			pal.center();			pal.show();		}		else		{			pal.layout.layout(true);		}	   	};	// Determines whether the active item is a composition  	this.checkActiveItem = function () 	{		return !(app.project.activeItem instanceof CompItem);	};   	// Determines whether a given layer is a text layer  	this.checkLayerType = function (layer)	{		return !(layer instanceof TextLayer);	}		// Functional part of the script: places each character (or word or lines) of the selected text layer on its own layer 	this.decompose = function ()	{		try		{			var comp = app.project.activeItem;			var err = this.noCompErr;			if (this.checkActiveItem(comp)) throw(err);								var layer = comp.selectedLayers[0];			var err = this.noLayerErr;			if (!layer) throw(err);						var err = this.badSelLayerErr;			if (this.checkLayerType(layer)) throw(err);						var err = this.paragraphTextErr;			if (layer.property("ADBE Text Properties").property("ADBE Text Document").value.boxText) throw(err);									var textPos 	= layer.position.value;            var textString 	= layer.sourceText.value.toString();		            var textBox 	= layer.sourceRectAtTime(comp.time, false);            var textJust 	= layer.property("ADBE Text Properties").property("ADBE Text Document").value.justification;             var textOffset 	= 0; 										// left            if (textJust == ParagraphJustification.CENTER_JUSTIFY) 		// center            	textOffset -= textBox.width / 2;            else if (textJust == ParagraphJustification.RIGHT_JUSTIFY)	// right            	textOffset -= textBox.width;	                        var textStartPos = textPos + textOffset;                        var lastLength 	= 0;			app.beginUndoGroup(this.scriptTitle);            						switch (this.splitInto)			{				case 0: // split into characters				{					var numSkips = 0;                      					for (var charId = 0; charId < textString.length; charId++)					{						var character = textString.charAt(charId);												if (character.match(/\s+/))						{							numSkips++;							continue;						}												var newLayer = layer.duplicate();						newLayer.name = character;												if (this.useExprB)						{							var animator = newLayer.property("ADBE Text Properties").property("ADBE Text Animators").addProperty("ADBE Text Animator");							var opacityProp = animator.property("ADBE Text Animator Properties").addProperty("ADBE Text Opacity");							var expressionSelector = animator.property("ADBE Text Selectors").addProperty("ADBE Text Expressible Selector");							opacityProp.setValue(0);							expressionSelector.property("ADBE Text Expressible Amount").expression = "selectorValue * (textIndex != " + (charId+1-numSkips) + ");";	 							var basedOnProp = animator.property("ADBE Text Selectors").property("ADBE Text Expressible Selector").property("ADBE Text Range Type2");							basedOnProp.setValue(this.basedOnMode.charactersExcludingSpaces);						}						else						{							newLayer.sourceText.setValue(character);							var newPos = textStartPos + [textBox.width * (charId / textString.length), 0, 0];							newLayer.position.setValue(newPos);						}					}					break;				}				case 1: // split into words				{					var words = textString.split(/\s+/);					for (var wordId = 0; wordId < words.length; wordId++)					{						var word = words[wordId];												var newLayer = layer.duplicate();						newLayer.name = word;						if (this.useExprB)						{							var animator = newLayer.property("ADBE Text Properties").property("ADBE Text Animators").addProperty("ADBE Text Animator");							var opacityProp = animator.property("ADBE Text Animator Properties").addProperty("ADBE Text Opacity");							var expressionSelector = animator.property("ADBE Text Selectors").addProperty("ADBE Text Expressible Selector");							opacityProp.setValue(0);							expressionSelector.property("ADBE Text Expressible Amount").expression = "selectorValue * (textIndex != " + (wordId+1) + ");";							var basedOnProp = animator.property("ADBE Text Selectors").property("ADBE Text Expressible Selector").property("ADBE Text Range Type2");							basedOnProp.setValue(this.basedOnMode.words);						}						else						{							newLayer.sourceText.setValue(word);							var wordWidth =  newLayer.sourceRectAtTime(comp.time, false).width;							if (wordId > 0) 							{								lastLength += 25; // accounts for spaces							}							var newPos = textStartPos + [lastLength, 0, 0];							newLayer.position.setValue(newPos);							lastLength += wordWidth;						}					}					break;				}								case 2: // split into lines				{					var lines = textString.split(/\r+/);					for (var lineId = 0; lineId < lines.length; lineId++) 					{						var line = lines[lineId];												var newLayer = layer.duplicate();						newLayer.name = line;												if (this.useExprB)						{							var animator = newLayer.property("ADBE Text Properties").property("ADBE Text Animators").addProperty("ADBE Text Animator");							var opacityProp = animator.property("ADBE Text Animator Properties").addProperty("ADBE Text Opacity");							var expressionSelector = animator.property("ADBE Text Selectors").addProperty("ADBE Text Expressible Selector");							opacityProp.setValue(0);							expressionSelector.property("ADBE Text Expressible Amount").expression = "selectorValue * (textIndex != " + (lineId+1) + ");";	 													var basedOnProp = animator.property("ADBE Text Selectors").property("ADBE Text Expressible Selector").property("ADBE Text Range Type2");							basedOnProp.setValue(this.basedOnMode.lines);												}						else						{							newLayer.sourceText.setValue(line);							var lineHeight =  newLayer.sourceRectAtTime(comp.time, false).height;							var newPos = textStartPos + [0, lastLength, 0];							newLayer.position.setValue(newPos);							lastLength += lineHeight + 25; // accounts for leading						}					}					break;				}				default:					break;			}						layer.enabled = false;			layer.selected = false;				  				  			app.endUndoGroup();		}		catch(err)		{			utils.throwErr(err);		}					};		this.run = function (thisObj) 	{		this.buildUI(thisObj);	};}// utilitiesfunction DecomposeTextUtils(){	var utils = this;		this.loc = function (str)	{		var lang = parseFloat(app.version) < 9 ? $.locale : app.isoLanguage;		return lang.toLowerCase().match("fr") ? str.fr : str.en;	};	this.throwErr = function (err)	{		var title = $.fileName.substring($.fileName.lastIndexOf("/")+1, $.fileName.lastIndexOf("."));		alert(this.loc(err), title, true);	};		this.createAboutDlg = function (aboutStr, usageStr)	{			eval(unescape	};}// run scriptnew DecomposeText().run(this);